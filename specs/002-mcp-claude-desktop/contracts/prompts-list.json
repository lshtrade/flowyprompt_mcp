{
  "tool": "prompts/list",
  "description": "List all available templates from the configured GitHub repository",
  "version": "1.0.0",
  "input": {
    "description": "No input parameters required",
    "schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false
    }
  },
  "output": {
    "description": "List of available prompt templates with metadata",
    "schema": {
      "type": "object",
      "required": ["prompts"],
      "properties": {
        "prompts": {
          "type": "array",
          "description": "Array of available templates",
          "items": {
            "type": "object",
            "required": ["name"],
            "properties": {
              "name": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9_-]+$",
                "description": "Unique template identifier",
                "example": "Brand_Positioning_Strategy"
              },
              "description": {
                "type": "string",
                "description": "Human-readable template description",
                "example": "브랜드 포지셔닝 전략 수립"
              },
              "arguments": {
                "type": "array",
                "description": "List of template variables",
                "items": {
                  "type": "object",
                  "required": ["name"],
                  "properties": {
                    "name": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9_]+$",
                      "description": "Variable name (used as {{name}} in template)",
                      "example": "company_name"
                    },
                    "description": {
                      "type": "string",
                      "description": "Variable description for user guidance",
                      "example": "회사 또는 브랜드 이름"
                    },
                    "required": {
                      "type": "boolean",
                      "description": "Whether this variable must be provided",
                      "default": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "errors": [
    {
      "code": "GITHUB_AUTH_FAILED",
      "message": "GitHub authentication failed. Please check your Personal Access Token.",
      "httpEquivalent": 401,
      "userAction": "Verify GITHUB_PAT environment variable is correct and has repository access"
    },
    {
      "code": "NETWORK_ERROR",
      "message": "Cannot connect to GitHub API",
      "httpEquivalent": 503,
      "userAction": "Check internet connection and GitHub API status"
    },
    {
      "code": "REPOSITORY_NOT_FOUND",
      "message": "GitHub repository not found or not accessible",
      "httpEquivalent": 404,
      "userAction": "Verify GITHUB_REPO_URL is correct and repository exists"
    },
    {
      "code": "INVALID_TEMPLATE",
      "message": "One or more templates have invalid JSON format",
      "httpEquivalent": 422,
      "userAction": "Check template files for JSON syntax errors"
    },
    {
      "code": "RATE_LIMIT_EXCEEDED",
      "message": "GitHub API rate limit exceeded",
      "httpEquivalent": 429,
      "userAction": "Wait for rate limit to reset or use a different PAT"
    }
  ],
  "examples": [
    {
      "scenario": "Successful list with 2 templates",
      "request": {},
      "response": {
        "prompts": [
          {
            "name": "Brand_Positioning_Strategy",
            "description": "브랜드 포지셔닝 전략 수립",
            "arguments": [
              {
                "name": "company_name",
                "description": "회사 또는 브랜드 이름",
                "required": true
              },
              {
                "name": "industry",
                "description": "산업 분야",
                "required": true
              },
              {
                "name": "target_audience",
                "description": "타겟 고객층",
                "required": false
              }
            ]
          },
          {
            "name": "AI_Analysis_Report",
            "description": "AI 기술 분석 보고서 생성",
            "arguments": [
              {
                "name": "technology",
                "description": "분석 대상 AI 기술",
                "required": true
              },
              {
                "name": "use_case",
                "description": "활용 사례",
                "required": false
              }
            ]
          }
        ]
      }
    },
    {
      "scenario": "Empty repository (no templates)",
      "request": {},
      "response": {
        "prompts": []
      }
    },
    {
      "scenario": "GitHub authentication failure",
      "request": {},
      "error": {
        "code": "GITHUB_AUTH_FAILED",
        "message": "GitHub authentication failed. Please check your Personal Access Token."
      }
    }
  ],
  "performance": {
    "coldFetch": {
      "target": "≤ 2s",
      "description": "First request (GitHub API call)"
    },
    "cachedFetch": {
      "target": "≤ 300ms",
      "description": "Subsequent requests (cache hit)"
    },
    "cacheStrategy": {
      "method": "ETag-based revalidation",
      "ttl": "15 minutes",
      "description": "Cache template list with ETag header for efficient revalidation"
    }
  },
  "testCases": [
    {
      "id": "TC-LIST-001",
      "description": "Should return template list with all metadata",
      "given": "GitHub repository contains valid templates",
      "when": "prompts/list is called",
      "then": "Returns array of prompts with name, description, and arguments"
    },
    {
      "id": "TC-LIST-002",
      "description": "Should handle empty repository",
      "given": "GitHub repository has no template files",
      "when": "prompts/list is called",
      "then": "Returns empty prompts array without error"
    },
    {
      "id": "TC-LIST-003",
      "description": "Should use cache on repeated calls",
      "given": "Template list has been fetched once",
      "when": "prompts/list is called again within 15 minutes",
      "then": "Returns cached result in < 300ms"
    },
    {
      "id": "TC-LIST-004",
      "description": "Should revalidate with ETag after cache expiry",
      "given": "Cached template list has expired (> 15 minutes)",
      "when": "prompts/list is called",
      "then": "Sends GitHub request with If-None-Match header (ETag)"
    },
    {
      "id": "TC-LIST-005",
      "description": "Should handle GitHub authentication failure",
      "given": "GitHub PAT is invalid or expired",
      "when": "prompts/list is called",
      "then": "Returns GITHUB_AUTH_FAILED error with 401 equivalent"
    }
  ]
}
